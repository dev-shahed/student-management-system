# Neon DB Production Configuration
# Copy your connection details from Neon Console (console.neon.tech)

# Example Neon Connection String format:
# spring.datasource.url=jdbc:postgresql://ep-example-12345.us-east-1.aws.neon.tech:5432/neondb?sslmode=require

# EASY SETUP: Just replace the values below with your actual Neon DB credentials
# Get these from: https://console.neon.tech/ -> Your Project -> Connection Details

# Use environment variables (secure for production)
spring.datasource.url=${NEON_DB_URL}
spring.datasource.username=${NEON_DB_USERNAME}
spring.datasource.password=${NEON_DB_PASSWORD}

# BACKUP: Hardcoded values (NOT RECOMMENDED - use .env file instead)
# spring.datasource.url=jdbc:postgresql://your-endpoint.aws.neon.tech:5432/your-database?sslmode=require
# spring.datasource.username=your_username
# spring.datasource.password=your_password
spring.datasource.driver-class-name=org.postgresql.Driver

# Production settings for Neon
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
logging.level.org.springframework.security=WARN
logging.level.org.springframework.security.web.access=WARN
logging.level.org.springframework.security.authentication=WARN

# Neon-optimized connection pool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=30000
